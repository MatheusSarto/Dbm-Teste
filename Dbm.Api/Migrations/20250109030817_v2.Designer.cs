// <auto-generated />
using System;
using Dbm.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dbm.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250109030817_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dbm.Core.Models.Cliente", b =>
                {
                    b.Property<long>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdCliente"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Dbm.Core.Models.Protocolo", b =>
                {
                    b.Property<long>("IdProtocolo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdProtocolo"));

                    b.Property<long>("ClienteId")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("DataAbertura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DataFechamento")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("NVARCHAR");

                    b.Property<long>("ProtocoloStatusId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("IdProtocolo");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProtocoloStatusId");

                    b.ToTable("Protocolo", (string)null);
                });

            modelBuilder.Entity("Dbm.Core.Models.ProtocoloFollow", b =>
                {
                    b.Property<long>("IdFollow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdFollow"));

                    b.Property<DateTime>("DataAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("DescricaoAcao")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("NVARCHAR");

                    b.Property<long>("ProtocoloId")
                        .HasColumnType("BIGINT");

                    b.HasKey("IdFollow");

                    b.HasIndex("ProtocoloId");

                    b.ToTable("ProtocoloFollow", (string)null);
                });

            modelBuilder.Entity("Dbm.Core.Models.StatusProtocolo", b =>
                {
                    b.Property<long>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdStatus"));

                    b.Property<string>("NomeStatus")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("IdStatus");

                    b.ToTable("StatusProtocolos");
                });

            modelBuilder.Entity("Dbm.Core.Models.Protocolo", b =>
                {
                    b.HasOne("Dbm.Core.Models.Cliente", "Cliente")
                        .WithMany("Protocolos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dbm.Core.Models.StatusProtocolo", "ProtocoloStatus")
                        .WithMany("Protocolos")
                        .HasForeignKey("ProtocoloStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("ProtocoloStatus");
                });

            modelBuilder.Entity("Dbm.Core.Models.ProtocoloFollow", b =>
                {
                    b.HasOne("Dbm.Core.Models.Protocolo", "Protocolo")
                        .WithMany("ProtocoloFollows")
                        .HasForeignKey("ProtocoloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Protocolo");
                });

            modelBuilder.Entity("Dbm.Core.Models.Cliente", b =>
                {
                    b.Navigation("Protocolos");
                });

            modelBuilder.Entity("Dbm.Core.Models.Protocolo", b =>
                {
                    b.Navigation("ProtocoloFollows");
                });

            modelBuilder.Entity("Dbm.Core.Models.StatusProtocolo", b =>
                {
                    b.Navigation("Protocolos");
                });
#pragma warning restore 612, 618
        }
    }
}
